1. select actor.act_id, act.act_fname, act.act_lname, actor.act_gender, movie_cast.role, movie.mov_title;
from actor , movie_cast, movie
where actor.act_id = movie_cast.act_id
and movie_cast.mov_id = movie.mov_id
and movie.mov_title = 'Annie Hall'

2. select (dir_fname|| ' '|| dir_lname) as director_fullname
from director, movie, movie_direction
WHERE director.dir_id = movie_direction.dir_id AND movie_direction.mov_id = movie.mov_id AND movie.mov_title = 'Eyes Wide Shut'

3. select * from movie Where not mov_rel_country = 'UK'

4. select movie.mov_title, movie.mov_year, movie.mov_dt_rel, director.dir_fname, director.dir_lname, (actor.act_fname || ' ' || actor.act_lname) As actor_fullname
From movie 
inner join movie_direction on movie.mov_id = movie_direction.mov_id
inner join movie_cast on movie_direction.mov_id = movie_cast.mov_id
inner join rating on movie_cast.mov_id = rating.mov_id
inner join reviewer on rating.rev_id = reviewer.rev_id
inner join director on movie_direction.dir_id = director.dir_id
inner join actor on movie_cast.act_id = actor.act_id
Where reviewer.rev_name is null

5. SELECT mov_title
FROM movie
WHERE mov_id = 
	(SELECT mov_id
	FROM movie_direction
	WHERE dir_id in
		(SELECT dir_id
		FROM director
		WHERE dir_fname = 'Woody' and dir_lname = 'Allen'))

6. SELECT DISTINCT movie.mov_year, rating.rev_stars
FROM movie, rating
WHERE movie.mov_id = rating.mov_id
AND rating.rev_stars > 3
ORDER BY movie.mov_year

7. SELECT mov_title 
FROM movie 
WHERE mov_id in
	(SELECT mov_id
	FROM rating
	WHERE rev_stars Is NULL)

8. SELECT rev_name FROM reviewer 
WHERE rev_id in
	(SELECT rev_id
	FROM rating
	WHERE rev_stars Is NULL)

9. SELECT reviewer.rev_name, movie.mov_title, rating.rev_stars
FROM reviewer
INNER JOIN rating On reviewer.rev_id = rating.rev_id
INNER JOIN movie on rating.mov_id = movie.mov_id
WHERE rating.rev_stars is not NULL
AND reviewer.rev_name is not NULL
Order By reviewer.rev_name, movie.mov_title, rating.rev_stars

10. SELECT reviewer.rev_name, movie.mov_title
FROM reviewer
INNER JOIN rating On reviewer.rev_id = rating.rev_id
INNER JOIN movie on rating.mov_id = movie.mov_id
WHERE rating.rev_id = 
	(SELECT rev_id
	FROM rating
	GROUP BY rev_id
	HAVING COUNT(*) > 1)

11. SELECT movie.mov_title, rating.rev_stars
FROM movie
INNER JOIN rating ON movie.mov_id = rating.mov_id
WHERE rating.rev_stars = 
	(SELECT MAX(rev_stars)
	FROM rating)
ORDER BY movie.mov_title

12. SELECT rev_name
FROM reviewer
WHERE rev_id = 
	(SELECT rev_id 
	FROM rating
	WHERE mov_id = 
		(SELECT mov_id
		FROM movie
		WHERE mov_title = 'American Beauty'))

13. SELECT mov_title
FROM movie
WHERE mov_id in 
	(SELECT mov_id
	FROM rating
	WHERE rev_id in
		(SELECT rev_id
		FROM reviewer
		WHERE NOT rev_name = 'Paul Monks'))
ORDER BY mov_title

14. SELECT reviewer.rev_name, movie.mov_title, rating.rev_stars
FROM reviewer
INNER JOIN rating On reviewer.rev_id = rating.rev_id
INNER JOIN movie on rating.mov_id = movie.mov_id
WHERE rating.rev_stars =
	(SELECT MIN(rev_stars) FROM rating)

15.  SELECT mov_title
FROM movie
WHERE mov_id IN 
(SELECT mov_id 
FROM movie_direction
WHERE dir_id = 
	(SELECT dir_id
	FROM director
	WHERE (dir_fname|| ' '||dir_lname) = 'James Cameron'))

16. SELECT mov_title
FROM movie
INNER JOIN movie_cast on movie.mov_id = movie_cast.mov_id
WHERE movie_cast.act_id =
	(SELECT act_id
	FROM movie_cast
	GROUP BY act_id
	HAVING COUNT(*) > 1)
